{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LaFlamme\\\\desktop\\\\Guilherme-Guy\\\\semana9\\\\pokeapi\\\\src\\\\components\\\\PokeCard\\\\index.js\";\nimport React from \"react\";\nimport axios from \"axios\";\n\nclass PokeCard extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      // valor do estado que guarda infos e foto do pokemon\n      pokemon: {}\n    };\n\n    this.pegaPokemon = pokeName => {\n      axios.get(`https://pokeapi.co/api/v2/pokemon/${pokeName}`).then(response => {\n        // guarda as infos do pokemon no estado\n        this.setState({\n          pokemon: response.data\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n  }\n\n  // método que roda após a montagem do componente\n  componentDidMount() {\n    this.pegaPokemon(this.props.pokemon);\n  } // método que roda após a atualização do componente.\n  // Um dos casos de atualização do componente é a\n  // mudança da props que está sendo passado pra ele\n\n\n  componentDidUpdate(prevProps) {\n    // aqui, é feita uma verificação da props anterior com a props atual.\n    // Caso a props anterior seja diferente da props atual,\n    // a função pegaPokemon é chamada.\n    if (prevProps.pokemon !== this.props.pokemon) {\n      this.pegaPokemon(this.props.pokemon);\n    }\n  } // função que bate na poke API com um nome específico de pokemon\n  // Isso permite que consigamos pegar as infos dos pokemons.\n  // Nos métodos de ciclo de vida, ela é chamada passando como\n  // parâmetro o nome de pokemon que está chegando como props.\n\n\n  render() {\n    const pokemon = this.state.pokemon;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, pokemon.name), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }, pokemon.weight, \" Kg\"), pokemon.types && /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 27\n      }\n    }, pokemon.types[0].type.name), pokemon.sprites && /*#__PURE__*/React.createElement(\"img\", {\n      src: pokemon.sprites.front_default,\n      alt: pokemon.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}\n\nexport default PokeCard;","map":{"version":3,"sources":["C:/Users/LaFlamme/desktop/Guilherme-Guy/semana9/pokeapi/src/components/PokeCard/index.js"],"names":["React","axios","PokeCard","Component","state","pokemon","pegaPokemon","pokeName","get","then","response","setState","data","catch","err","console","log","componentDidMount","props","componentDidUpdate","prevProps","render","name","weight","types","type","sprites","front_default"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,QAAN,SAAuBF,KAAK,CAACG,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACrCC,KADqC,GAC7B;AACN;AACAC,MAAAA,OAAO,EAAE;AAFH,KAD6B;;AAAA,SA2BrCC,WA3BqC,GA2BvBC,QAAQ,IAAI;AACxBN,MAAAA,KAAK,CACFO,GADH,CACQ,qCAAoCD,QAAS,EADrD,EAEGE,IAFH,CAEQC,QAAQ,IAAI;AAChB;AACA,aAAKC,QAAL,CAAc;AAAEN,UAAAA,OAAO,EAAEK,QAAQ,CAACE;AAApB,SAAd;AACD,OALH,EAMGC,KANH,CAMSC,GAAG,IAAI;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,OARH;AASD,KArCoC;AAAA;;AAMrC;AACAG,EAAAA,iBAAiB,GAAG;AAClB,SAAKX,WAAL,CAAiB,KAAKY,KAAL,CAAWb,OAA5B;AACD,GAToC,CAWrC;AACA;AACA;;;AACAc,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC5B;AACA;AACA;AACA,QAAIA,SAAS,CAACf,OAAV,KAAsB,KAAKa,KAAL,CAAWb,OAArC,EAA8C;AAC5C,WAAKC,WAAL,CAAiB,KAAKY,KAAL,CAAWb,OAA5B;AACD;AACF,GArBoC,CAuBrC;AACA;AACA;AACA;;;AAaAgB,EAAAA,MAAM,GAAG;AACP,UAAMhB,OAAO,GAAG,KAAKD,KAAL,CAAWC,OAA3B;AAEA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIA,OAAO,CAACiB,IAAZ,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIjB,OAAO,CAACkB,MAAZ,QAFF,EAGGlB,OAAO,CAACmB,KAAR,iBAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAInB,OAAO,CAACmB,KAAR,CAAc,CAAd,EAAiBC,IAAjB,CAAsBH,IAA1B,CAHpB,EAIGjB,OAAO,CAACqB,OAAR,iBACC;AAAK,MAAA,GAAG,EAAErB,OAAO,CAACqB,OAAR,CAAgBC,aAA1B;AAAyC,MAAA,GAAG,EAAEtB,OAAO,CAACiB,IAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,CADF;AAUD;;AApDoC;;AAuDvC,eAAepB,QAAf","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\n\r\nclass PokeCard extends React.Component {\r\n  state = {\r\n    // valor do estado que guarda infos e foto do pokemon\r\n    pokemon: {}\r\n  };\r\n\r\n  // método que roda após a montagem do componente\r\n  componentDidMount() {\r\n    this.pegaPokemon(this.props.pokemon);\r\n  }\r\n\r\n  // método que roda após a atualização do componente.\r\n  // Um dos casos de atualização do componente é a\r\n  // mudança da props que está sendo passado pra ele\r\n  componentDidUpdate(prevProps) {\r\n    // aqui, é feita uma verificação da props anterior com a props atual.\r\n    // Caso a props anterior seja diferente da props atual,\r\n    // a função pegaPokemon é chamada.\r\n    if (prevProps.pokemon !== this.props.pokemon) {\r\n      this.pegaPokemon(this.props.pokemon);\r\n    }\r\n  }\r\n\r\n  // função que bate na poke API com um nome específico de pokemon\r\n  // Isso permite que consigamos pegar as infos dos pokemons.\r\n  // Nos métodos de ciclo de vida, ela é chamada passando como\r\n  // parâmetro o nome de pokemon que está chegando como props.\r\n  pegaPokemon = pokeName => {\r\n    axios\r\n      .get(`https://pokeapi.co/api/v2/pokemon/${pokeName}`)\r\n      .then(response => {\r\n        // guarda as infos do pokemon no estado\r\n        this.setState({ pokemon: response.data });\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const pokemon = this.state.pokemon;\r\n\r\n    return (\r\n      <div>\r\n        <p>{pokemon.name}</p>\r\n        <p>{pokemon.weight} Kg</p>\r\n        {pokemon.types && <p>{pokemon.types[0].type.name}</p>}\r\n        {pokemon.sprites && (\r\n          <img src={pokemon.sprites.front_default} alt={pokemon.name} />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PokeCard;\r\n"]},"metadata":{},"sourceType":"module"}