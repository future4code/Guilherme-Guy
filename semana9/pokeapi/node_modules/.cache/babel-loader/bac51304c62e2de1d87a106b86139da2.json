{"ast":null,"code":"import React from \"react\";\nimport axios from \"axios\";\nimport PokeCard from \"./components/PokeCard/index\"; // class App extends React.Component {\n//   state = {\n//     // lista de pokemons que está sendo guardada no estado\n//     pokeList: [],\n//     // nome do pokemon guardado no estado, assim que o usuário\n//     // escolhe um nome no dropdown\n//     pokeName: \"\"\n//   };\n//   // método que roda após a montagem do componente\n//   componentDidMount = () => {\n//     // função axios que está batendo na API e buscando 151 pokemons\n//     axios\n//       .get(\"https://pokeapi.co/api/v2/pokemon/?limit=151\")\n//       .then(response => {\n//         // função que está setando no estado os 151 pokemons\n//         this.setState({ pokeList: response.data.results });\n//       })\n//       .catch(err => {\n//         console.log(err);\n//       });\n//   };\n//   changePokeName = event => {\n//     this.setState({ pokeName: event.target.value });\n//   };\n//   render() {\n//     return (\n//       <div className=\"App\">\n//         {/* evento onChange chama função toda vez que o usuário \n//         escolhe um novo pokemon no dropdown */}\n//         <select onChange={this.changePokeName}>\n//           <option value={\"\"}>Nenhum</option>\n//           {/* renderizando a lista de pokemons como opções do select */}\n//           {this.state.pokeList.map(pokemon => {\n//             return (\n//               <option key={pokemon.name} value={pokemon.name}>\n//                 {pokemon.name}\n//               </option>\n//             );\n//           })}\n//         </select>\n//         {/* expressão booleana que renderiza o componente PokeCard,\n//         caso o valor de pokeName, no estado, seja true */}\n//         {this.state.pokeName && <PokeCard pokemon={this.state.pokeName} />}\n//       </div>\n//     );\n//   }\n// }\n// export default App;","map":{"version":3,"sources":["C:/Users/LaFlamme/desktop/Guilherme-Guy/semana9/pokeapi/src/App.js"],"names":["React","axios","PokeCard"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,6BAArB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport PokeCard from \"./components/PokeCard/index\";\n\n// class App extends React.Component {\n//   state = {\n//     // lista de pokemons que está sendo guardada no estado\n//     pokeList: [],\n//     // nome do pokemon guardado no estado, assim que o usuário\n//     // escolhe um nome no dropdown\n//     pokeName: \"\"\n//   };\n\n//   // método que roda após a montagem do componente\n//   componentDidMount = () => {\n//     // função axios que está batendo na API e buscando 151 pokemons\n//     axios\n//       .get(\"https://pokeapi.co/api/v2/pokemon/?limit=151\")\n//       .then(response => {\n//         // função que está setando no estado os 151 pokemons\n//         this.setState({ pokeList: response.data.results });\n//       })\n//       .catch(err => {\n//         console.log(err);\n//       });\n//   };\n\n//   changePokeName = event => {\n//     this.setState({ pokeName: event.target.value });\n//   };\n\n//   render() {\n//     return (\n//       <div className=\"App\">\n//         {/* evento onChange chama função toda vez que o usuário \n//         escolhe um novo pokemon no dropdown */}\n//         <select onChange={this.changePokeName}>\n//           <option value={\"\"}>Nenhum</option>\n//           {/* renderizando a lista de pokemons como opções do select */}\n//           {this.state.pokeList.map(pokemon => {\n//             return (\n//               <option key={pokemon.name} value={pokemon.name}>\n//                 {pokemon.name}\n//               </option>\n//             );\n//           })}\n//         </select>\n//         {/* expressão booleana que renderiza o componente PokeCard,\n//         caso o valor de pokeName, no estado, seja true */}\n//         {this.state.pokeName && <PokeCard pokemon={this.state.pokeName} />}\n//       </div>\n//     );\n//   }\n// }\n\n// export default App;\n"]},"metadata":{},"sourceType":"module"}