{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\LaFlamme\\\\Desktop\\\\Guilherme-Guy\\\\semana9\\\\pokeapi\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import axios from\"axios\";import PokeCard from\"./components/PokeCard/Index\";var App=function App(props){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),pokeList=_useState2[0],setPokeList=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),pokeName=_useState4[0],setPokeName=_useState4[1];useEffect(function(){axios.get(\"https://pokeapi.co/api/v2/pokemon/?limit=151\").then(function(response){// função que está setando no estado os 151 pokemons\nsetPokeList(response.data.results);}).catch(function(err){console.log(err);});},[pokeList]);var changePokeName=function changePokeName(event){setPokeName(event.target.value);};return/*#__PURE__*/React.createElement(\"div\",{className:\"App\"},/*#__PURE__*/React.createElement(\"select\",{onChange:changePokeName},/*#__PURE__*/React.createElement(\"option\",{value:\"\"},\"Nenhum\"),pokeList.map(function(pokemon){return/*#__PURE__*/React.createElement(\"option\",{key:pokemon.name,value:pokemon.name},pokemon.name);})),pokeName&&/*#__PURE__*/React.createElement(PokeCard,{pokemon:pokeName}));};export default App;// class App extends React.Component {\n//   state = {\n//     // lista de pokemons que está sendo guardada no estado\n//     pokeList: [],\n//     // nome do pokemon guardado no estado, assim que o usuário\n//     // escolhe um nome no dropdown\n//     pokeName: \"\"\n//   };\n//   // método que roda após a montagem do componente\n//   componentDidMount = () => {\n//     // função axios que está batendo na API e buscando 151 pokemons\n//     axios\n//       .get(\"https://pokeapi.co/api/v2/pokemon/?limit=151\")\n//       .then(response => {\n//         // função que está setando no estado os 151 pokemons\n//         this.setState({ pokeList: response.data.results });\n//       })\n//       .catch(err => {\n//         console.log(err);\n//       });\n//   };\n//   changePokeName = event => {\n//     this.setState({ pokeName: event.target.value });\n//   };\n//   render() {\n//     return (\n//       <div className=\"App\">\n//         {/* evento onChange chama função toda vez que o usuário \n//         escolhe um novo pokemon no dropdown */}\n//         <select onChange={this.changePokeName}>\n//           <option value={\"\"}>Nenhum</option>\n//           {/* renderizando a lista de pokemons como opções do select */}\n//           {this.state.pokeList.map(pokemon => {\n//             return (\n//               <option key={pokemon.name} value={pokemon.name}>\n//                 {pokemon.name}\n//               </option>\n//             );\n//           })}\n//         </select>\n//         {/* expressão booleana que renderiza o componente PokeCard,\n//         caso o valor de pokeName, no estado, seja true */}\n//         {this.state.pokeName && <PokeCard pokemon={this.state.pokeName} />}\n//       </div>\n//     );\n//   }\n// }\n// export default App;","map":{"version":3,"sources":["C:/Users/LaFlamme/Desktop/Guilherme-Guy/semana9/pokeapi/src/App.js"],"names":["React","useState","useEffect","axios","PokeCard","App","props","pokeList","setPokeList","pokeName","setPokeName","get","then","response","data","results","catch","err","console","log","changePokeName","event","target","value","map","pokemon","name"],"mappings":"yLAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,QAAP,KAAqB,6BAArB,CAEA,GAAMC,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,CAAAC,KAAK,CAAK,eAGYL,QAAQ,CAAC,EAAD,CAHpB,wCAGbM,QAHa,eAGHC,WAHG,8BAIYP,QAAQ,CAAC,EAAD,CAJpB,yCAIbQ,QAJa,eAIHC,WAJG,eAOlBR,SAAS,CAAC,UAAM,CAEdC,KAAK,CACJQ,GADD,CACK,8CADL,EAECC,IAFD,CAEM,SAAAC,QAAQ,CAAI,CAChB;AACAL,WAAW,CAACK,QAAQ,CAACC,IAAT,CAAcC,OAAf,CAAX,CACD,CALD,EAMCC,KAND,CAMO,SAAAC,GAAG,CAAI,CACZC,OAAO,CAACC,GAAR,CAAYF,GAAZ,EACD,CARD,EAUH,CAZU,CAYR,CAACV,QAAD,CAZQ,CAAT,CAeH,GAAMa,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAAAC,KAAK,CAAI,CAC7BX,WAAW,CAACW,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAX,CACD,CAFF,CAOC,mBACE,2BAAK,SAAS,CAAC,KAAf,eAGI,8BAAQ,QAAQ,CAAEH,cAAlB,eACE,8BAAQ,KAAK,CAAE,EAAf,WADF,CAGGb,QAAQ,CAACiB,GAAT,CAAa,SAAAC,OAAO,CAAI,CACvB,mBACE,8BAAQ,GAAG,CAAEA,OAAO,CAACC,IAArB,CAA2B,KAAK,CAAED,OAAO,CAACC,IAA1C,EACGD,OAAO,CAACC,IADX,CADF,CAKD,CANA,CAHH,CAHJ,CAgBKjB,QAAQ,eAAI,oBAAC,QAAD,EAAU,OAAO,CAAEA,QAAnB,EAhBjB,CADF,CAoBD,CAjDD,CAmDA,cAAeJ,CAAAA,GAAf,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport PokeCard from \"./components/PokeCard/Index\";\n\nconst App = props =>  {\n\n\n  const [pokeList, setPokeList] = useState([]);\n  const [pokeName, setPokeName] = useState(\"\")\n\n\n    useEffect(() => {\n\n      axios\n      .get(\"https://pokeapi.co/api/v2/pokemon/?limit=151\")\n      .then(response => {\n        // função que está setando no estado os 151 pokemons\n        setPokeList(response.data.results);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n\n  }, [pokeList]);\n\n\n const changePokeName = event => {\n    setPokeName(event.target.value);\n  };\n\n\n\n\n  return (\n    <div className=\"App\">\n        {/* evento onChange chama função toda vez que o usuário \n        escolhe um novo pokemon no dropdown */}\n        <select onChange={changePokeName}>\n          <option value={\"\"}>Nenhum</option>\n          {/* renderizando a lista de pokemons como opções do select */}\n          {pokeList.map(pokemon => {\n            return (\n              <option key={pokemon.name} value={pokemon.name}>\n                {pokemon.name}\n              </option>\n            );\n          })}\n        </select>\n        {/* expressão booleana que renderiza o componente PokeCard,\n        caso o valor de pokeName, no estado, seja true */}\n        {pokeName && <PokeCard pokemon={pokeName} />}\n      </div>\n  )\n}\n\nexport default App\n\n\n// class App extends React.Component {\n//   state = {\n//     // lista de pokemons que está sendo guardada no estado\n//     pokeList: [],\n//     // nome do pokemon guardado no estado, assim que o usuário\n//     // escolhe um nome no dropdown\n//     pokeName: \"\"\n//   };\n\n//   // método que roda após a montagem do componente\n//   componentDidMount = () => {\n//     // função axios que está batendo na API e buscando 151 pokemons\n//     axios\n//       .get(\"https://pokeapi.co/api/v2/pokemon/?limit=151\")\n//       .then(response => {\n//         // função que está setando no estado os 151 pokemons\n//         this.setState({ pokeList: response.data.results });\n//       })\n//       .catch(err => {\n//         console.log(err);\n//       });\n//   };\n\n//   changePokeName = event => {\n//     this.setState({ pokeName: event.target.value });\n//   };\n\n//   render() {\n//     return (\n//       <div className=\"App\">\n//         {/* evento onChange chama função toda vez que o usuário \n//         escolhe um novo pokemon no dropdown */}\n//         <select onChange={this.changePokeName}>\n//           <option value={\"\"}>Nenhum</option>\n//           {/* renderizando a lista de pokemons como opções do select */}\n//           {this.state.pokeList.map(pokemon => {\n//             return (\n//               <option key={pokemon.name} value={pokemon.name}>\n//                 {pokemon.name}\n//               </option>\n//             );\n//           })}\n//         </select>\n//         {/* expressão booleana que renderiza o componente PokeCard,\n//         caso o valor de pokeName, no estado, seja true */}\n//         {this.state.pokeName && <PokeCard pokemon={this.state.pokeName} />}\n//       </div>\n//     );\n//   }\n// }\n\n// export default App;\n"]},"metadata":{},"sourceType":"module"}