{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LaFlamme\\\\desktop\\\\Guilherme-Guy\\\\semana9\\\\pokeapi\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport PokeCard from \"./components/PokeCard/index\";\n\nfunction App() {\n  const [pokeList, setPokeList] = useState([]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  });\n}\n\nexport default App; // class App extends React.Component {\n//   state = {\n//     // lista de pokemons que está sendo guardada no estado\n//     pokeList: [],\n//     // nome do pokemon guardado no estado, assim que o usuário\n//     // escolhe um nome no dropdown\n//     pokeName: \"\"\n//   };\n//   // método que roda após a montagem do componente\n//   componentDidMount = () => {\n//     // função axios que está batendo na API e buscando 151 pokemons\n//     axios\n//       .get(\"https://pokeapi.co/api/v2/pokemon/?limit=151\")\n//       .then(response => {\n//         // função que está setando no estado os 151 pokemons\n//         this.setState({ pokeList: response.data.results });\n//       })\n//       .catch(err => {\n//         console.log(err);\n//       });\n//   };\n//   changePokeName = event => {\n//     this.setState({ pokeName: event.target.value });\n//   };\n//   render() {\n//     return (\n//       <div className=\"App\">\n//         {/* evento onChange chama função toda vez que o usuário \n//         escolhe um novo pokemon no dropdown */}\n//         <select onChange={this.changePokeName}>\n//           <option value={\"\"}>Nenhum</option>\n//           {/* renderizando a lista de pokemons como opções do select */}\n//           {this.state.pokeList.map(pokemon => {\n//             return (\n//               <option key={pokemon.name} value={pokemon.name}>\n//                 {pokemon.name}\n//               </option>\n//             );\n//           })}\n//         </select>\n//         {/* expressão booleana que renderiza o componente PokeCard,\n//         caso o valor de pokeName, no estado, seja true */}\n//         {this.state.pokeName && <PokeCard pokemon={this.state.pokeName} />}\n//       </div>\n//     );\n//   }\n// }\n// export default App;","map":{"version":3,"sources":["C:/Users/LaFlamme/desktop/Guilherme-Guy/semana9/pokeapi/src/App.js"],"names":["React","useState","useEffect","axios","PokeCard","App","pokeList","setPokeList"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,6BAArB;;AAEA,SAASC,GAAT,GAAe;AAGb,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;AAIA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAKD;;AAED,eAAeI,GAAf,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport PokeCard from \"./components/PokeCard/index\";\n\nfunction App() {\n\n\n  const [pokeList, setPokeList] = useState([]);\n\n\n\n  return (\n    <div>\n      \n    </div>\n  )\n}\n\nexport default App\n\n\n// class App extends React.Component {\n//   state = {\n//     // lista de pokemons que está sendo guardada no estado\n//     pokeList: [],\n//     // nome do pokemon guardado no estado, assim que o usuário\n//     // escolhe um nome no dropdown\n//     pokeName: \"\"\n//   };\n\n//   // método que roda após a montagem do componente\n//   componentDidMount = () => {\n//     // função axios que está batendo na API e buscando 151 pokemons\n//     axios\n//       .get(\"https://pokeapi.co/api/v2/pokemon/?limit=151\")\n//       .then(response => {\n//         // função que está setando no estado os 151 pokemons\n//         this.setState({ pokeList: response.data.results });\n//       })\n//       .catch(err => {\n//         console.log(err);\n//       });\n//   };\n\n//   changePokeName = event => {\n//     this.setState({ pokeName: event.target.value });\n//   };\n\n//   render() {\n//     return (\n//       <div className=\"App\">\n//         {/* evento onChange chama função toda vez que o usuário \n//         escolhe um novo pokemon no dropdown */}\n//         <select onChange={this.changePokeName}>\n//           <option value={\"\"}>Nenhum</option>\n//           {/* renderizando a lista de pokemons como opções do select */}\n//           {this.state.pokeList.map(pokemon => {\n//             return (\n//               <option key={pokemon.name} value={pokemon.name}>\n//                 {pokemon.name}\n//               </option>\n//             );\n//           })}\n//         </select>\n//         {/* expressão booleana que renderiza o componente PokeCard,\n//         caso o valor de pokeName, no estado, seja true */}\n//         {this.state.pokeName && <PokeCard pokemon={this.state.pokeName} />}\n//       </div>\n//     );\n//   }\n// }\n\n// export default App;\n"]},"metadata":{},"sourceType":"module"}