{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LaFlamme\\\\desktop\\\\Guilherme-Guy\\\\semana9\\\\pokeapi\\\\src\\\\components\\\\PokeCard\\\\Index.js\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nfunction Index() {\n  const [pokemon, setPokemon] = useState({});\n  useEffect((props, prevProps) => {\n    pegaPokemon(props.pokemon);\n\n    if (prevProps.pokemon !== props.pokemon) {\n      pegaPokemon(props.pokemon);\n    }\n  }, [pokemon, pegaPokemon]);\n\n  const pegaPokemon = pokeName => {\n    axios.get(`https://pokeapi.co/api/v2/pokemon/${pokeName}`).then(response => {\n      // guarda as infos do pokemon no estado\n      setPokemon(response.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const pokemone = pokemon;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, pokemone.name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, pokemone.weight, \" Kg\"), pokemone.types && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 28\n    }\n  }, pokemone.types[0].type.name), pokemone.sprites && /*#__PURE__*/React.createElement(\"img\", {\n    src: pokemone.sprites.front_default,\n    alt: pokemone.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }));\n}\n\nexport default Index; // class PokeCard extends React.Component {\n//   state = {\n//     // valor do estado que guarda infos e foto do pokemon\n//     pokemon: {}\n//   };\n//   // método que roda após a montagem do componente\n//   componentDidMount() {\n//     this.pegaPokemon(this.props.pokemon);\n//   }\n//   // método que roda após a atualização do componente.\n//   // Um dos casos de atualização do componente é a\n//   // mudança da props que está sendo passado pra ele\n//   componentDidUpdate(prevProps) {\n//     // aqui, é feita uma verificação da props anterior com a props atual.\n//     // Caso a props anterior seja diferente da props atual,\n//     // a função pegaPokemon é chamada.\n//     if (prevProps.pokemon !== this.props.pokemon) {\n//       this.pegaPokemon(this.props.pokemon);\n//     }\n//   }\n//   // função que bate na poke API com um nome específico de pokemon\n//   // Isso permite que consigamos pegar as infos dos pokemons.\n//   // Nos métodos de ciclo de vida, ela é chamada passando como\n//   // parâmetro o nome de pokemon que está chegando como props.\n//   pegaPokemon = pokeName => {\n//     axios\n//       .get(`https://pokeapi.co/api/v2/pokemon/${pokeName}`)\n//       .then(response => {\n//         // guarda as infos do pokemon no estado\n//         this.setState({ pokemon: response.data });\n//       })\n//       .catch(err => {\n//         console.log(err);\n//       });\n//   };\n//   render() {\n//     const pokemon = this.state.pokemon;\n//     return (\n//       <div>\n//         <p>{pokemon.name}</p>\n//         <p>{pokemon.weight} Kg</p>\n//         {pokemon.types && <p>{pokemon.types[0].type.name}</p>}\n//         {pokemon.sprites && (\n//           <img src={pokemon.sprites.front_default} alt={pokemon.name} />\n//         )}\n//       </div>\n//     );\n//   }\n// }\n// export default PokeCard;","map":{"version":3,"sources":["C:/Users/LaFlamme/desktop/Guilherme-Guy/semana9/pokeapi/src/components/PokeCard/Index.js"],"names":["React","useState","useEffect","axios","Index","pokemon","setPokemon","props","prevProps","pegaPokemon","pokeName","get","then","response","data","catch","err","console","log","pokemone","name","weight","types","type","sprites","front_default"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,SAASC,KAAT,GAAiB;AAEb,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,EAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,CAACK,KAAD,EAAQC,SAAR,KAAsB;AAC9BC,IAAAA,WAAW,CAACF,KAAK,CAACF,OAAP,CAAX;;AAEA,QAAIG,SAAS,CAACH,OAAV,KAAsBE,KAAK,CAACF,OAAhC,EAAyC;AACvCI,MAAAA,WAAW,CAACF,KAAK,CAACF,OAAP,CAAX;AAA4B;AAE/B,GANQ,EAMN,CAACA,OAAD,EAAUI,WAAV,CANM,CAAT;;AAQD,QAAMA,WAAW,GAAGC,QAAQ,IAAI;AAC3BP,IAAAA,KAAK,CACFQ,GADH,CACQ,qCAAoCD,QAAS,EADrD,EAEGE,IAFH,CAEQC,QAAQ,IAAI;AAChB;AACAP,MAAAA,UAAU,CAACO,QAAQ,CAACC,IAAV,CAAV;AACD,KALH,EAMGC,KANH,CAMSC,GAAG,IAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,KARH;AASD,GAVJ;;AAaG,QAAMG,QAAQ,GAAGd,OAAjB;AAEF,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIc,QAAQ,CAACC,IAAb,CADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAID,QAAQ,CAACE,MAAb,QAFA,EAGCF,QAAQ,CAACG,KAAT,iBAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIH,QAAQ,CAACG,KAAT,CAAe,CAAf,EAAkBC,IAAlB,CAAuBH,IAA3B,CAHnB,EAICD,QAAQ,CAACK,OAAT,iBACC;AAAK,IAAA,GAAG,EAAEL,QAAQ,CAACK,OAAT,CAAiBC,aAA3B;AAA0C,IAAA,GAAG,EAAEN,QAAQ,CAACC,IAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADJ;AAUH;;AAED,eAAehB,KAAf,C,CAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\n\r\nfunction Index() {\r\n\r\n    const [pokemon, setPokemon] = useState({})\r\n\r\n    useEffect((props, prevProps) => {\r\n      pegaPokemon(props.pokemon);\r\n\r\n      if (prevProps.pokemon !== props.pokemon) {\r\n        pegaPokemon(props.pokemon);}\r\n  \r\n    }, [pokemon, pegaPokemon]);\r\n\r\n   const pegaPokemon = pokeName => {\r\n        axios\r\n          .get(`https://pokeapi.co/api/v2/pokemon/${pokeName}`)\r\n          .then(response => {\r\n            // guarda as infos do pokemon no estado\r\n            setPokemon(response.data);\r\n          })\r\n          .catch(err => {\r\n            console.log(err);\r\n          });\r\n      };\r\n  \r\n\r\n      const pokemone = pokemon;\r\n\r\n    return (\r\n        <div>\r\n        <p>{pokemone.name}</p>\r\n        <p>{pokemone.weight} Kg</p>\r\n        {pokemone.types && <p>{pokemone.types[0].type.name}</p>}\r\n        {pokemone.sprites && (\r\n          <img src={pokemone.sprites.front_default} alt={pokemone.name} />\r\n        )}\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Index\r\n\r\n\r\n// class PokeCard extends React.Component {\r\n//   state = {\r\n//     // valor do estado que guarda infos e foto do pokemon\r\n//     pokemon: {}\r\n//   };\r\n\r\n//   // método que roda após a montagem do componente\r\n//   componentDidMount() {\r\n//     this.pegaPokemon(this.props.pokemon);\r\n//   }\r\n\r\n//   // método que roda após a atualização do componente.\r\n//   // Um dos casos de atualização do componente é a\r\n//   // mudança da props que está sendo passado pra ele\r\n//   componentDidUpdate(prevProps) {\r\n//     // aqui, é feita uma verificação da props anterior com a props atual.\r\n//     // Caso a props anterior seja diferente da props atual,\r\n//     // a função pegaPokemon é chamada.\r\n//     if (prevProps.pokemon !== this.props.pokemon) {\r\n//       this.pegaPokemon(this.props.pokemon);\r\n//     }\r\n//   }\r\n\r\n//   // função que bate na poke API com um nome específico de pokemon\r\n//   // Isso permite que consigamos pegar as infos dos pokemons.\r\n//   // Nos métodos de ciclo de vida, ela é chamada passando como\r\n//   // parâmetro o nome de pokemon que está chegando como props.\r\n//   pegaPokemon = pokeName => {\r\n//     axios\r\n//       .get(`https://pokeapi.co/api/v2/pokemon/${pokeName}`)\r\n//       .then(response => {\r\n//         // guarda as infos do pokemon no estado\r\n//         this.setState({ pokemon: response.data });\r\n//       })\r\n//       .catch(err => {\r\n//         console.log(err);\r\n//       });\r\n//   };\r\n\r\n//   render() {\r\n//     const pokemon = this.state.pokemon;\r\n\r\n//     return (\r\n//       <div>\r\n//         <p>{pokemon.name}</p>\r\n//         <p>{pokemon.weight} Kg</p>\r\n//         {pokemon.types && <p>{pokemon.types[0].type.name}</p>}\r\n//         {pokemon.sprites && (\r\n//           <img src={pokemon.sprites.front_default} alt={pokemon.name} />\r\n//         )}\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default PokeCard;\r\n"]},"metadata":{},"sourceType":"module"}